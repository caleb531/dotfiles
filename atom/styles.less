/*
 * Your Stylesheet
 */

// Define default values for color variables used below (in case the current
// Atom theme does not use these color variables)
@blue: none;
@gray: none;
@green: none;
@orange: none;
@pink: none;
@yellow: none;
@import 'ui-variables';


// ********** Atom header & tabs **********


// Make window title bar blend in with rest of window
atom-panel.header {
  border-bottom-width: 0;
}
.title-bar {
  background-color: @app-background-color;
}
atom-pane-container > atom-pane.pane:focus-within .tab {
  border-top: solid 1px transparent;
  &.active {
    border-top-color: @base-border-color;
    &:before {
      background: @green;
    }
    &[data-type="TreeView"] {
      border-width: 0;
    }
  }
}


// ********** Syntax highlighting **********


atom-text-editor:not([mini]) {

  // De-italicize all syntax components which Monokai italicizes
  .syntax--storage.syntax--type,
  .syntax--entity.syntax--other.syntax--inherited-class,
  .syntax--variable.syntax--parameter,
  .syntax--support.syntax--type,
  .syntax--support.syntax--class,
  .syntax--source.syntax--js.syntax--jsx .syntax--jsx .syntax--entity.syntax--other.syntax--attribute-name {
    font-style: normal;
  }
  // Group all Python color changes together
  .syntax--source.syntax--python {
    .syntax--string.syntax--quoted {
      // Use white as default color for f-string interpolations
      .syntax--embedded.syntax--meta {
        color: #fff;
      }
      // Also colorize {} wrappers distinctly within f-strings
      .syntax--punctuation.syntax--section.syntax--embedded {
        color: @pink;
      }
      // Colorize f-string format specifiers
      .syntax--format-specifier.syntax--meta {
        color: @orange;
      }
    }
  }
  // Group all Ruby color changes together
  .syntax--source.syntax--ruby {
    .syntax--string.syntax--quoted {
      // Use white as default color for string interpolations
      .syntax--embedded.syntax--source {
        color: #fff;
      }
      // Also colorize #{} wrappers distinctly within strings
      .syntax--punctuation.syntax--section.syntax--embedded {
        color: @pink;
      }
    }
  }
  // Group all JS and TypeScript color changes together
  .syntax--source.syntax--js,
  .syntax--source.syntax--ts {
    .syntax--string.syntax--quoted.syntax--template {
      // Use white as default color for ES6 template literal interpolation
      .syntax--embedded.syntax--source {
        color: #fff;
      }
      // Also colorize ${} wrappers distinctly
      .syntax--punctuation.syntax--section.syntax--embedded {
        color: @pink;
      }
    }
    // Colorize class and constructor names
    .syntax--meta.syntax--class {
      color: @blue;
    }
    // Colorize function parameters
    .syntax--formal-parameter.syntax--identifier {
      color: @orange;
    }
  }
  // Remove underline from links in tree-sitter JSON files
  .syntax--source.syntax--json,
  .syntax--source.syntax--gfm {
    .syntax--markup.syntax--underline.syntax--link {
      text-decoration: none;
    }
  }
  // Make selected line more prominent
  .line.cursor-line {
    background-color: rgba(255, 255, 255, 0.05);
  }
  // Make underline under matched brackets solid rather than dotted
  .bracket-matcher .region {
    border-bottom-style: solid;
  }
  // Colorize Apache Directory/Location paths like all other strings
  .syntax--meta.syntax--toc-list.syntax--apache-config {
    &.syntax--directory,
    &.syntax--location,
    &.syntax--files {
      color: @yellow;
    }
  }
  // Colorize diffs and patchfiles
  .syntax--diff {
    &.syntax--inserted {
      color: @green;
    }
    &.syntax--deleted {
      color: @pink;
    }
    &.syntax--range {
      color: @blue;
    }
    &.syntax--header,
    &.syntax--index {
      color: @gray;
    }
  }
  // CSS
  .syntax--css {
    // Property names (valid or not)
    .syntax--support.syntax--property-name {
      color: @blue;
    }
    .syntax--punctuation.syntax--definition.syntax--entity {
      color: @green;
    }
  }
  // PHP
  .syntax--php {
    .syntax--punctuation.syntax--section.syntax--embedded {
      &.syntax--begin,
      &.syntax--end {
        color: @orange;
      }
    }
  }
}

// Use a prettier color for the find-and-replace current result "flash'"
@syntax-selection-flash-color: @green;
@keyframes flash {
  from { background-color: @syntax-selection-flash-color; }
  to { background-color: null; }
}

// ********** Linter **********


.solid-simple-table.linter {
  border-width: 0;
  // Do not display column headers
  thead {
    display: none;
  }
  // Make Linter panel blend into status bar
  tbody {
    background: @app-background-color;
  }
  tr {
    // Add border between each row
    border-bottom: solid 1px @base-border-color;
    &:last-child {
      border-bottom-width: 0;
    }
  }
  td {
    padding: 10px 15px;
    // Make Severity column more prominent
    &:first-child {
      width: 78px;
      min-width: 0;
      border-left: solid 2px @background-color-error;
      font-weight: bold;
      color: #fff;
    }
  }
  td, th {
    // Hide Provider column
    &:nth-child(2) {
      display: none;
    }
  }
}

// ********** Settings **********


.settings-view {
  // Individual setting checkboxes
  input[type="checkbox"] {
    &:active,
    &:checked {
      background: @green;
    }
  }
  // Informational alert panels (e.g. the panel on the Updates screen)
  .alert-info {
    // Make them gray instead of an ugly blue
    border-color: @button-border-color;
    background: @button-background-color;
    color: @text-color-highlight;
  }
  // "Enabled" package status indicators
  .package-card .meta-controls .status-indicator {
    background: @green;
  }
}


// ********** Tree View **********


// Tree View dock (Atom >=1.7)
.atom-dock-inner.left.atom-dock-open {
  // Constrain width of tree view
  .atom-dock-mask,
  .atom-dock-content-wrapper {
    @tree-view-width: 220px;
    min-width: @tree-view-width;
    max-width: @tree-view-width;
  }
}

// Increase prominence of item text color for focused tree view
.tree-view:focus li.selected {
  color: #fff;
}

// The mixin guard ensures that this declaration does not break other syntax
// themes (which do not use the same color variable names as monokai)
.desaturated-modified-color(@color) when not (@color = none) {
  color: desaturate(@color, 30%);
}
// Change color used to highlight modified files/folders
.status-modified,
.list-tree li.list-nested-item.status-modified > .list-item,
.list-tree li:not(.list-nested-item).status-modified,
.list-tree li:not(.list-nested-item).selected.status-modified {
  .desaturated-modified-color(@orange);
}
atom-text-editor .gutter .line-number.git-line-modified {
  border-left-color: @orange;
}


// ********** Miscellaneous **********

// Disable per-line info tooltips within blame file
.blame-line-marker {
  pointer-events: none;
}
// Remove background highlighting on lines in blame sidebar
.blame-line {
  background: none !important;
}

// Hide "GitHub" and "Fetch" links in status bar
.github-StatusBarTile,
.github-PushPull {
  display: none;
}

// Make Fuzzy Finder / Command Palette character matches white instead of blue
.select-list .list-group .character-match {
  color: #fff;
}

// Hide experimental "Fast Mode" prompt in Fuzzy Finder
.fuzzy-finder .experiment-prompt {
  display: none;
}

// Allow text selection on notification messages to be visible
atom-notifications .message li::selection {
  background-color: rgba(255, 255, 255, 0.5);
}

// SVG Preview pane
.svg-preview {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .image-canvas {
    max-width: 100%;
    height: auto;
    text-align: center;
  }
}
