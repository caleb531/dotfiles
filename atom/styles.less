/*
 * Your Stylesheet
 */

// Define default values for color variables used below (in case the current
// Atom theme does not use these color variables)
@green: none;
@orange: none;
@yellow: none;

@import 'ui-variables';

// Make window title bar blend in with rest of window
atom-panel.header {
  border-bottom-width: 0;
}
.title-bar {
  background-color: @app-background-color;
}
.tab-bar .tab {
  border-top: solid 1px transparent;
  &.active {
    border-top-color: @base-border-color;
    &[data-type="TreeView"] {
      border-width: 0;
    }
  }
}

atom-text-editor:not([mini]) {
  // De-italicize all syntax components which Monokai italicizes
  .syntax--storage.syntax--type,
  .syntax--entity.syntax--other.syntax--inherited-class,
  .syntax--variable.syntax--parameter,
  .syntax--support.syntax--type,
  .syntax--support.syntax--class {
    font-style: normal;
  }
  // Make selected line more prominent
  .line.cursor-line {
    background-color: rgba(255, 255, 255, 0.05);
  }
  // Make underline under matched brackets solid rather than dotted
  .bracket-matcher .region {
    border-bottom-style: solid;
  }
  // Color Apache Directory/Location paths like all other strings
  .syntax--meta.syntax--toc-list.syntax--directory.syntax--apache-config,
  .syntax--meta.syntax--toc-list.syntax--location.syntax--apache-config,
  .syntax--meta.syntax--toc-list.syntax--files.syntax--apache-config {
    color: @yellow;
  }
}

// Use a prettier color for the find-and-replace current result "flash'"
@syntax-selection-flash-color: @green;
@keyframes flash {
  from { background-color: @syntax-selection-flash-color; }
  to { background-color: null; }
}

// Make labels for Merge Conflicts (e.g. "// Our changes") more prominent
atom-text-editor:not([mini]).conflicted .text-subtle {
  color: #fff;
}

// Selected tab highlight
.tab-bar .tab::before {
  background: @green;
}

// Remove ugly fuzzy outline from buttons when focused
.btn {
  outline-width: 0 !important;
}

// Use prettier border for hovered/active/focused buttons
.btn-default,
.btn-info {
  border-color: @button-border-color !important;
}

// Hide Linter counts for error/warning/info messages in status bar
.linter-status-count {
  display: none;
}

// Make Linter gutter blend into the line number gutter
atom-text-editor.editor .gutter[gutter-name="linter-ui-default"] {
  background-color: @syntax-gutter-background-color;
}

.sb-table.linter {
  border-width: 0;
  // Do not display column headers
  thead {
    display: none;
  }
  // Make Linter panel blend into status bar
  tbody {
    background: @app-background-color;
  }
  tr {
    // Add border between each row
    border-bottom: solid 1px @base-border-color;
    &:last-child {
      border-bottom-width: 0;
    }
  }
  td {
    padding: 10px 15px;
    // Make Severity column more prominent
    &:first-child {
      width: 78px;
      min-width: 0;
      border-left: solid 2px @background-color-error;
      font-weight: bold;
      color: #fff;
    }
  }
  td, th {
    // Hide Provider column
    &:nth-child(2) {
      display: none;
    }
  }
}

// "Lines modified" status bar indicator
.status-modified {
  color: @orange;
}

// Make search panel character matches white instead of blue
.select-list .list-group .character-match {
  color: #fff;
}

.settings-view {
  // Individual setting checkboxes
  input[type="checkbox"] {
    &:active,
    &:checked {
      background: @green;
    }
  }
  // Informational alert panels (e.g. the panel on the Updates screen)
  .alert-info {
    // Make them gray instead of an ugly blue
    border-color: @button-border-color;
    background: @button-background-color;
    color: @text-color-highlight;
  }
  // "Enabled" package status indicators
  .package-card .meta-controls .status-indicator {
    background: @green;
    // "Disabled" package status indicators
    &.is-disabled {
      background-color: @orange;
    }
  }
}


// SVG Preview pane
.svg-preview {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: none !important;
  .image-controls {
    display: none;
  }
  .image-canvas {
    max-width: 100%;
    height: auto;
    text-align: center;
  }
  svg {
    background: #fff;
  }
}

// Tree View dock (Atom >=1.7)
.atom-dock-inner.left.atom-dock-open {
  // Constrain width of tree view
  .atom-dock-mask,
  .atom-dock-content-wrapper {
    @tree-view-width: 200px;
    min-width: @tree-view-width;
    max-width: @tree-view-width;
  }
}

// Linter panel dock (Atom >= 1.7)
.atom-dock-inner.bottom.atom-dock-open {
  // Hide Linter title bar
  .tab-bar {
    display: none;
  }
  // Constrain height of Linter panel
  .atom-dock-mask,
  .atom-dock-content-wrapper {
    @tree-view-height: 96px;
    min-height: @tree-view-height;
    max-height: @tree-view-height;
  }
}
