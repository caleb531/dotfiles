# Your snippets

# Control structures for all C-based languages

'.source.c,
 .source.cpp,
 .source.cs,
 .source.java,
 .source.js':

  # Conditional blocks

  'if':
    'prefix': 'if'
    'body': "if (${1:condition}) {\n\t$2\n}"

  'else if':
    'prefix': 'elseif'
    'body': "else if (${1:condition}) {\n\t$2\n}"

  'else':
    'prefix': 'else'
    'body': "else {\n\t$1\n}"

  'for':
    'prefix': 'for'
    'body': "for (${1:i} = ${2:0}; ${1:i} < ${3:end}; ${1:i} += ${4:1}) {\n\t$5\n}"

  # Error handling

  'try':
    'prefix': 'try'
    'body': "try {\n\t$1\n}"

  'catch':
    'prefix': 'catch'
    'body': "catch ($1) {\n\t$2\n}"

  'finally':
    'prefix': 'finally'
    'body': "finally {\n\t$1\n}"

'.source.js':

  # Functions

  'Function Declaration':
    'prefix': 'fd'
    'body': "function ${1:name}($2) {\n\t$3\n}"

  'Function Expression':
    'prefix': 'fe'
    'body': "function ($1) {\n\t$2\n}"

  # Jasmine

  'it':
    'prefix': 'it'
    'body': "it('$1', function ($2) {\n\t$3\n});"

  'describe':
    'prefix': 'desc'
    'body': "describe('$1', function ($2) {\n\t$3\n});"

  'expect':
    'prefix': 'expect'
    'body': "expect($1).${2:toBe}($3);"

# Python 2 and 3 blocks/statements

'.source.python':

  'env (python3)':
    'prefix': 'env3'
    'body': "#!/usr/bin/env python3\n"

  'name import':
    'prefix': 'from'
    'body': "from ${1:module} import ${2:name}"

  'docstring':
    'prefix': 'docstr'
    'body': "\"\"\"$1\"\"\""

  'if':
    'prefix': 'if'
    'body': "if ${1:condition}:\n\t${2:pass}"

  'elif':
    'prefix': 'elif'
    'body': "elif ${1:condition}:\n\t${2:pass}"

  'else':
    'prefix': 'else'
    'body': "else:\n\t${1:pass}"

  'for':
    'prefix': 'for'
    'body': "for ${1:value} in ${2:iterable}:\n\t${3:pass}"

  'while':
    'prefix': 'while'
    'body': "while ${1:condition}:\n\t${2:pass}"

  'try':
    'prefix': 'try'
    'body': "try:\n\t${1:pass}"

  'except':
    'prefix': 'except'
    'body': "except ${1:Exception}:\n\t${2:pass}"

  'finally':
    'prefix': 'finally'
    'body': "finally:\n\t${1:pass}"

  'with':
    'prefix': 'with'
    'body': "with ${1:contextmanager}:\n\t${2:pass}"

  'with open()':
    'prefix': 'witho'
    'body': "with open(${1:path}, '${2:r}') as ${3:file}:\n\t${4:pass}"

  'function':
    'prefix': 'def'
    'body': "def ${1:fname}($2):\n\t${3:pass}"

  'class':
    'prefix': 'class'
    'body': "class ${1:ClassName}(${2:object}):\n\t${3:pass}"

# PHP blocks/statements (meant to be used within PHP source blocks)

'.source.php':

  'echo':
    'prefix': 'e'
    'body': "echo $1;"

  'print_r':
    'prefix': 'pr'
    'body': "print_r( $1 );"

  'function':
    'prefix': 'f'
    'body': "function ${1:name}($2) {\n\t$3\n}"

  'if':
    'prefix': 'if'
    'body': "if ( ${1:condition} ) {\n\t$2\n}"

  'else if':
    'prefix': 'elseif'
    'body': "else if ( ${1:condition} ) {\n\t$2\n}"

  'else':
    'prefix': 'else'
    'body': "else {\n\t$1\n}"

  'for':
    'prefix': 'for'
    'body': "for ( ${1:\$i} = ${2:0}; ${1:\$i} < ${3:end}; ${1:\$i} += ${4:1} ) {\n\t$5\n}"

  'foreach':
    'prefix': 'foreach'
    'body': "foreach ( ${1:\$object} as ${2:\$value} ) {\n\t$3\n}"

# Inline PHP Blocks (meant to be intermixed with HTML)

'.text.html.php':

  'PHP Block (inline)':
    'prefix': 'php'
    'body': "<?php $1 ?>"

  'PHP Block (multiline)':
    'prefix': 'phpb'
    'body': "<?php\n\t$1\n?>"

  'echo (inline)':
    'prefix': 'pe'
    'body': "<?php echo $1; ?>"

  'if (inline)':
    'prefix': 'pif'
    'body': "<?php if ( ${1:condition} ): ?>\n\t$2\n<?php endif; ?>"

  'for (inline)':
    'prefix': 'pfor'
    'body': "<?php for ( ${1:\$i} = ${2:0}; ${1:\$i} < ${3:end}; ${1:\$i} += ${4:1} ): ?>\n\t$5\n<?php endfor; ?>"

  'foreach (inline)':
    'prefix': 'pforeach'
    'body': "<?php foreach ( ${1:object} as ${2:value} ): ?>\n\t$3 \n<?php endforeach; ?>"
